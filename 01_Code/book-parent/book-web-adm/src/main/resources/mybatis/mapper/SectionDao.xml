<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smart.db.mybatis.dao.SectionDao">
  <resultMap id="BaseResultMap" type="com.smart.db.mybatis.bean.SectionDO">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="book_id" jdbcType="INTEGER" property="bookId" />
    <result column="ordered" jdbcType="INTEGER" property="ordered" />
    <result column="section_num" jdbcType="INTEGER" property="sectionNum" />
    <result column="section_name" jdbcType="VARCHAR" property="sectionName" />
    <result column="part_num" jdbcType="INTEGER" property="partNum" />
    <result column="part_name" jdbcType="VARCHAR" property="partName" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
  </resultMap>
  <sql id="Criterion_Where_Clause">
    <where>
      <foreach collection="orWhereClausesList" item="whereclauses" separator="or">
        <trim prefix="(" prefixOverrides="and" suffix=")">
          <foreach collection="whereclauses.andWhereClauselist" item="whereclause">
            and ${whereclause.fieldName} ${whereclause.condition} #{whereclause.fieldValue}
          </foreach>
        </trim>
      </foreach>
    </where>
  </sql>
  <sql id="Update_Criterion_Where_Clause">
    <where>
      <foreach collection="criterion.orWhereClausesList" item="whereclauses" separator="or">
        <trim prefix="(" prefixOverrides="and" suffix=")">
          <foreach collection="whereclauses.andWhereClauselist" item="whereclause">
            and ${whereclause.fieldName} ${whereclause.condition} #{whereclause.fieldValue}
          </foreach>
        </trim>
      </foreach>
    </where>
  </sql>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from section
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.smart.db.mybatis.bean.SectionDO">
    insert into section (id, book_id, ordered, 
      section_num, section_name, part_num, 
      part_name, gmt_create, gmt_modified
      )
    values (#{id,jdbcType=INTEGER}, #{bookId,jdbcType=INTEGER}, #{ordered,jdbcType=INTEGER}, 
      #{sectionNum,jdbcType=INTEGER}, #{sectionName,jdbcType=VARCHAR}, #{partNum,jdbcType=INTEGER}, 
      #{partName,jdbcType=VARCHAR}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.smart.db.mybatis.bean.SectionDO">
    update section
    set book_id = #{bookId,jdbcType=INTEGER},
      ordered = #{ordered,jdbcType=INTEGER},
      section_num = #{sectionNum,jdbcType=INTEGER},
      section_name = #{sectionName,jdbcType=VARCHAR},
      part_num = #{partNum,jdbcType=INTEGER},
      part_name = #{partName,jdbcType=VARCHAR},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, book_id, ordered, section_num, section_name, part_num, part_name, gmt_create, 
    gmt_modified
    from section
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="listAll" resultMap="BaseResultMap">
    select id, book_id, ordered, section_num, section_name, part_num, part_name, gmt_create, 
    gmt_modified
    from section
  </select>
  <select id="listByCriterion" parameterType="org.phoenix.mybatis.criterion.SelectCriterion" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <choose>
      <when test="_parameter != null and selectiveColumnlist.size() != 0">
        <foreach collection="selectiveColumnlist" item="column" separator=",">
          ${column}
        </foreach>
      </when>
      <otherwise>
        id, book_id, ordered, section_num, section_name, part_num, part_name, gmt_create, 
        gmt_modified
      </otherwise>
    </choose>
    from section
    <if test="_parameter != null ">
      <include refid="Criterion_Where_Clause" />
    </if>
    <if test="orderByClause != null and orderByClause != ''">
      order by ${orderByClause}
    </if>
    <if test="_parameter != null and length != 0">
      limit ${begin}, ${length}
    </if>
  </select>
  <select id="countByCriterion" parameterType="org.phoenix.mybatis.criterion.CountCriterion" resultType="java.lang.Integer">
    select count(*) from section
    <if test="_parameter != null ">
      <include refid="Criterion_Where_Clause" />
    </if>
  </select>
  <update id="updateByCriterion" parameterType="map">
    update section
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.bookId != null">
        book_id = #{record.bookId,jdbcType=INTEGER},
      </if>
      <if test="record.ordered != null">
        ordered = #{record.ordered,jdbcType=INTEGER},
      </if>
      <if test="record.sectionNum != null">
        section_num = #{record.sectionNum,jdbcType=INTEGER},
      </if>
      <if test="record.sectionName != null">
        section_name = #{record.sectionName,jdbcType=VARCHAR},
      </if>
      <if test="record.partNum != null">
        part_num = #{record.partNum,jdbcType=INTEGER},
      </if>
      <if test="record.partName != null">
        part_name = #{record.partName,jdbcType=VARCHAR},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModified != null">
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="criterion != null">
      <choose>
        <when test="criterion.orWhereClausesList.size() == 0 || criterion.orWhereClausesList.get(0).andWhereClauselist.size() == 0">
          error
        </when>
        <otherwise>
          <include refid="Update_Criterion_Where_Clause" />
        </otherwise>
      </choose>
    </if>
  </update>
  <delete id="deleteByCriterion" parameterType="org.phoenix.mybatis.criterion.DeleteCriterion">
    delete from section
    <if test="_parameter != null">
      <choose>
        <when test="orWhereClausesList.size() == 0 || orWhereClausesList.get(0).andWhereClauselist.size() == 0">
          error
        </when>
        <otherwise>
          <include refid="Criterion_Where_Clause" />
        </otherwise>
      </choose>
    </if>
  </delete>
</mapper>